<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-29T09:41:15 IST" name="Default suite" finished-at="2022-03-29T09:46:55 IST" duration-ms="339765">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@8458f04]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-03-29T09:41:15 IST" name="Default test" finished-at="2022-03-29T09:46:55 IST" duration-ms="339765">
      <class name="Runner.TestApplication">
        <test-method is-config="true" signature="beforeExecution()[pri:0, instance:Runner.TestApplication@8458f04]" started-at="2022-03-29T09:41:15 IST" name="beforeExecution" finished-at="2022-03-29T09:41:15 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeExecution -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.TestApplication@8458f04]" started-at="2022-03-29T09:41:15 IST" name="setUpClass" finished-at="2022-03-29T09:41:17 IST" duration-ms="2210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@8458f04]" started-at="2022-03-29T09:41:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T09:46:35 IST" duration-ms="317525" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify payment file includes only below records,Where payment mode is Wire Transfer.Beneficiary Account is NOT maintained with legal entity."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Checking accountsPayable and accounts Receivable module]"]]>
              </value>
            </param>
          </params>
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\inindc00076\git\AzentioAutomationFramework1\Anandh_AzentioAutomationFramework1JAIPURBRANCH_HDFCBANK_2022-10-31_13-31-00(8).csv (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\inindc00076\git\AzentioAutomationFramework1\Anandh_AzentioAutomationFramework1JAIPURBRANCH_HDFCBANK_2022-10-31_13-31-00(8).csv (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
at java.base/java.io.FileReader.<init>(FileReader.java:60)
at stepdefinitions.ACCOUNTSPAYBLE_PaymentFileDownload.verify_where_payment_mode_is_wire_transfer(ACCOUNTSPAYBLE_PaymentFileDownload.java:231)
at âœ½.verify Where payment mode is Wire Transfer(file:///C:/Users/inindc00076/git/AzentioAutomationFramework1/Anandh_AzentioAutomationFramework1/src/test/java/features/ACCOUNTSPAYABLE_ACCOUNTSRECEIVABLE.feature:974)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.TestApplication@8458f04]" started-at="2022-03-29T09:46:35 IST" name="tearDownClass" finished-at="2022-03-29T09:46:55 IST" duration-ms="19941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterExecution()[pri:0, instance:Runner.TestApplication@8458f04]" started-at="2022-03-29T09:46:55 IST" name="afterExecution" finished-at="2022-03-29T09:46:55 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterExecution -->
      </class> <!-- Runner.TestApplication -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
