<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-09T15:08:45 AST" name="Default suite" finished-at="2023-02-09T15:10:04 AST" duration-ms="78654">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@2d901eb0]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-02-09T15:08:45 AST" name="Default test" finished-at="2023-02-09T15:10:04 AST" duration-ms="78654">
      <class name="Runner.TestApplication">
        <test-method is-config="true" signature="beforeExecution()[pri:0, instance:Runner.TestApplication@2d901eb0]" started-at="2023-02-09T15:08:45 AST" name="beforeExecution" finished-at="2023-02-09T15:08:45 AST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeExecution -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.TestApplication@2d901eb0]" started-at="2023-02-09T15:08:45 AST" name="setUpClass" finished-at="2023-02-09T15:08:47 AST" duration-ms="2231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@2d901eb0]" started-at="2023-02-09T15:08:47 AST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-09T15:09:49 AST" duration-ms="62165" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Accounts Receivable Report post bill is approved."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[AR/AP Module]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy46.sendKeys(Unknown Source)
at stepdefinitions.ARAP_AccountReceivableReport.select_the_vendor_name(ARAP_AccountReceivableReport.java:81)
at âœ½.select the vendor name(file:///C:/Users/ININDC00089/git/AzentioAutomationFramework/ArAp/AzentioAutomationFramework_ARAP_Excel/src/test/java/features/ArAp2.feature:66)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.TestApplication@2d901eb0]" started-at="2023-02-09T15:09:49 AST" name="tearDownClass" finished-at="2023-02-09T15:10:04 AST" duration-ms="14182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterExecution()[pri:0, instance:Runner.TestApplication@2d901eb0]" started-at="2023-02-09T15:10:04 AST" name="afterExecution" finished-at="2023-02-09T15:10:04 AST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterExecution -->
      </class> <!-- Runner.TestApplication -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
