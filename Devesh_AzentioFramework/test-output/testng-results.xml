<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-20T23:44:50 IST" name="Default suite" finished-at="2021-12-20T23:46:16 IST" duration-ms="86448">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@6bbe85a8]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-12-20T23:44:50 IST" name="Default test" finished-at="2021-12-20T23:46:16 IST" duration-ms="86448">
      <class name="Runner.TestApplication">
        <test-method is-config="true" signature="beforeExecution()[pri:0, instance:Runner.TestApplication@6bbe85a8]" started-at="2021-12-20T23:44:50 IST" name="beforeExecution" finished-at="2021-12-20T23:44:50 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeExecution -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.TestApplication@6bbe85a8]" started-at="2021-12-20T23:44:50 IST" name="setUpClass" finished-at="2021-12-20T23:44:51 IST" duration-ms="1463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@6bbe85a8]" started-at="2021-12-20T23:44:52 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-20T23:45:53 IST" duration-ms="61869" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Application Login]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=96.0.4664.110)
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'Z51', ip: '192.168.42.19', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c1db5440ce98b54162336685ed4bc1da, get {url=http://10.1.56.122:8680/kubs/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\DHARSH~1.431\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:49432}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49432/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c1db5440ce98b54162336685ed4bc1da]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=96.0.4664.110)
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'Z51', ip: '192.168.42.19', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c1db5440ce98b54162336685ed4bc1da, get {url=http://10.1.56.122:8680/kubs/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\DHARSH~1.431\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:49432}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49432/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c1db5440ce98b54162336685ed4bc1da
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:326)
at stepdefinitions.login.navigate_to_login_page(login.java:40)
at âœ½.Navigate to Login page(file:///C:/Users/dharshini.4312/git/Repo/AzentioAutomationFramework/AzentioAutomationFramework/src/test/java/features/LoginIntoApplication.feature:3)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@6bbe85a8]" started-at="2021-12-20T23:45:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-20T23:46:10 IST" duration-ms="16872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register an account with valid details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Registratio Tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.TestApplication@6bbe85a8]" started-at="2021-12-20T23:46:10 IST" name="tearDownClass" finished-at="2021-12-20T23:46:16 IST" duration-ms="6193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterExecution()[pri:0, instance:Runner.TestApplication@6bbe85a8]" started-at="2021-12-20T23:46:17 IST" name="afterExecution" finished-at="2021-12-20T23:46:17 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterExecution -->
      </class> <!-- Runner.TestApplication -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
